DROP TABLE IF EXISTS tests;
CREATE TABLE IF NOT EXISTS tests (
  -- uuid and description are taken from the test.toml file
  uuid TEXT PRIMARY KEY,
  description TEXT NOT NULL,
  -- The following section is needed by the online test-runner
  status TEXT DEFAULT 'fail',
  message TEXT,
  output TEXT,
  test_code TEXT,
  task_id INTEGER DEFAULT NULL,
  -- Here are columns for the actual tests
  input TEXT NOT NULL,          -- json object
  expected TEXT NOT NULL
);

INSERT INTO tests (uuid, description, input, expected)
VALUES
('b4057815-0d01-41f0-9119-6a91f54b2a0a', 'Should accept an initial game grid and a target search word', '{"grid":["jefblpepre"],"wordsToSearchFor":["clojure"]}', '{"clojure":null}'),
('6b22bcc5-6cbf-4674-931b-d2edbff73132', 'Should locate one word written left to right', '{"grid":["clojurermt"],"wordsToSearchFor":["clojure"]}', '{"clojure":{"start":{"column":1,"row":1},"end":{"column":7,"row":1}}}'),
('ff462410-434b-442d-9bc3-3360c75f34a8', 'Should locate the same word written left to right in a different position', '{"grid":["mtclojurer"],"wordsToSearchFor":["clojure"]}', '{"clojure":{"start":{"column":3,"row":1},"end":{"column":9,"row":1}}}'),
('a02febae-6347-443e-b99c-ab0afb0b8fca', 'Should locate a different left to right word', '{"grid":["coffeelplx"],"wordsToSearchFor":["coffee"]}', '{"coffee":{"start":{"column":1,"row":1},"end":{"column":6,"row":1}}}'),
('e42e9987-6304-4e13-8232-fa07d5280130', 'Should locate that different left to right word in a different position', '{"grid":["xcoffeezlp"],"wordsToSearchFor":["coffee"]}', '{"coffee":{"start":{"column":2,"row":1},"end":{"column":7,"row":1}}}'),
('9bff3cee-49b9-4775-bdfb-d55b43a70b2f', 'Should locate a left to right word in two line grid', '{"grid":["jefblpepre","tclojurerm"],"wordsToSearchFor":["clojure"]}', '{"clojure":{"start":{"column":2,"row":2},"end":{"column":8,"row":2}}}'),
('851a35fb-f499-4ec1-9581-395a87903a22', 'Should locate a left to right word in three line grid', '{"grid":["camdcimgtc","jefblpepre","clojurermt"],"wordsToSearchFor":["clojure"]}', '{"clojure":{"start":{"column":1,"row":3},"end":{"column":7,"row":3}}}'),
('2f3dcf84-ba7d-4b75-8b8d-a3672b32c035', 'Should locate a left to right word in ten line grid', '{"grid":["jefblpepre","camdcimgtc","oivokprjsm","pbwasqroua","rixilelhrs","wolcqlirpc","screeaumgr","alxhpburyi","jalaycalmp","clojurermt"],"wordsToSearchFor":["clojure"]}', '{"clojure":{"start":{"column":1,"row":10},"end":{"column":7,"row":10}}}'),
('006d4856-f365-4e84-a18c-7d129ce9eefb', 'Should locate that left to right word in a different position in a ten line grid', '{"grid":["jefblpepre","camdcimgtc","oivokprjsm","pbwasqroua","rixilelhrs","wolcqlirpc","screeaumgr","alxhpburyi","clojurermt","jalaycalmp"],"wordsToSearchFor":["clojure"]}', '{"clojure":{"start":{"column":1,"row":9},"end":{"column":7,"row":9}}}'),
('eff7ac9f-ff11-443e-9747-40850c12ab60', 'Should locate a different left to right word in a ten line grid', '{"grid":["jefblpepre","camdcimgtc","oivokprjsm","pbwasqroua","rixilelhrs","wolcqlirpc","fortranftw","alxhpburyi","clojurermt","jalaycalmp"],"wordsToSearchFor":["fortran"]}', '{"fortran":{"start":{"column":1,"row":7},"end":{"column":7,"row":7}}}'),
('dea39f86-8c67-4164-8884-13bfc48bd13b', 'Should locate multiple words', '{"grid":["jefblpepre","camdcimgtc","oivokprjsm","pbwasqroua","rixilelhrs","wolcqlirpc","fortranftw","alxhpburyi","jalaycalmp","clojurermt"],"wordsToSearchFor":["fortran","clojure"]}', '{"clojure":{"start":{"column":1,"row":10},"end":{"column":7,"row":10}},"fortran":{"start":{"column":1,"row":7},"end":{"column":7,"row":7}}}'),
('29e6a6a5-f80c-48a6-8e68-05bbbe187a09', 'Should locate a single word written right to left', '{"grid":["rixilelhrs"],"wordsToSearchFor":["elixir"]}', '{"elixir":{"start":{"column":6,"row":1},"end":{"column":1,"row":1}}}'),
('3cf34428-b43f-48b6-b332-ea0b8836011d', 'Should locate multiple words written in different horizontal directions', '{"grid":["jefblpepre","camdcimgtc","oivokprjsm","pbwasqroua","rixilelhrs","wolcqlirpc","screeaumgr","alxhpburyi","jalaycalmp","clojurermt"],"wordsToSearchFor":["elixir","clojure"]}', '{"clojure":{"start":{"column":1,"row":10},"end":{"column":7,"row":10}},"elixir":{"start":{"column":6,"row":5},"end":{"column":1,"row":5}}}'),
('2c8cd344-a02f-464b-93b6-8bf1bd890003', 'Should locate words written top to bottom', '{"grid":["jefblpepre","camdcimgtc","oivokprjsm","pbwasqroua","rixilelhrs","wolcqlirpc","screeaumgr","alxhpburyi","jalaycalmp","clojurermt"],"wordsToSearchFor":["clojure","elixir","ecmascript"]}', '{"clojure":{"start":{"column":1,"row":10},"end":{"column":7,"row":10}},"elixir":{"start":{"column":6,"row":5},"end":{"column":1,"row":5}},"ecmascript":{"start":{"column":10,"row":1},"end":{"column":10,"row":10}}}'),
('9ee1e43d-e59d-4c32-9a5f-6a22d4a1550f', 'Should locate words written bottom to top', '{"grid":["jefblpepre","camdcimgtc","oivokprjsm","pbwasqroua","rixilelhrs","wolcqlirpc","screeaumgr","alxhpburyi","jalaycalmp","clojurermt"],"wordsToSearchFor":["clojure","elixir","ecmascript","rust"]}', '{"clojure":{"start":{"column":1,"row":10},"end":{"column":7,"row":10}},"elixir":{"start":{"column":6,"row":5},"end":{"column":1,"row":5}},"ecmascript":{"start":{"column":10,"row":1},"end":{"column":10,"row":10}},"rust":{"start":{"column":9,"row":5},"end":{"column":9,"row":2}}}'),
('6a21a676-f59e-4238-8e88-9f81015afae9', 'Should locate words written top left to bottom right', '{"grid":["jefblpepre","camdcimgtc","oivokprjsm","pbwasqroua","rixilelhrs","wolcqlirpc","screeaumgr","alxhpburyi","jalaycalmp","clojurermt"],"wordsToSearchFor":["clojure","elixir","ecmascript","rust","java"]}', '{"clojure":{"start":{"column":1,"row":10},"end":{"column":7,"row":10}},"elixir":{"start":{"column":6,"row":5},"end":{"column":1,"row":5}},"ecmascript":{"start":{"column":10,"row":1},"end":{"column":10,"row":10}},"rust":{"start":{"column":9,"row":5},"end":{"column":9,"row":2}},"java":{"start":{"column":1,"row":1},"end":{"column":4,"row":4}}}'),
('c9125189-1861-4b0d-a14e-ba5dab29ca7c', 'Should locate words written bottom right to top left', '{"grid":["jefblpepre","camdcimgtc","oivokprjsm","pbwasqroua","rixilelhrs","wolcqlirpc","screeaumgr","alxhpburyi","jalaycalmp","clojurermt"],"wordsToSearchFor":["clojure","elixir","ecmascript","rust","java","lua"]}', '{"clojure":{"start":{"column":1,"row":10},"end":{"column":7,"row":10}},"elixir":{"start":{"column":6,"row":5},"end":{"column":1,"row":5}},"ecmascript":{"start":{"column":10,"row":1},"end":{"column":10,"row":10}},"rust":{"start":{"column":9,"row":5},"end":{"column":9,"row":2}},"java":{"start":{"column":1,"row":1},"end":{"column":4,"row":4}},"lua":{"start":{"column":8,"row":9},"end":{"column":6,"row":7}}}'),
('b19e2149-7fc5-41ec-a8a9-9bc6c6c38c40', 'Should locate words written bottom left to top right', '{"grid":["jefblpepre","camdcimgtc","oivokprjsm","pbwasqroua","rixilelhrs","wolcqlirpc","screeaumgr","alxhpburyi","jalaycalmp","clojurermt"],"wordsToSearchFor":["clojure","elixir","ecmascript","rust","java","lua","lisp"]}', '{"clojure":{"start":{"column":1,"row":10},"end":{"column":7,"row":10}},"elixir":{"start":{"column":6,"row":5},"end":{"column":1,"row":5}},"ecmascript":{"start":{"column":10,"row":1},"end":{"column":10,"row":10}},"rust":{"start":{"column":9,"row":5},"end":{"column":9,"row":2}},"java":{"start":{"column":1,"row":1},"end":{"column":4,"row":4}},"lua":{"start":{"column":8,"row":9},"end":{"column":6,"row":7}},"lisp":{"start":{"column":3,"row":6},"end":{"column":6,"row":3}}}'),
('69e1d994-a6d7-4e24-9b5a-db76751c2ef8', 'Should locate words written top right to bottom left', '{"grid":["jefblpepre","camdcimgtc","oivokprjsm","pbwasqroua","rixilelhrs","wolcqlirpc","screeaumgr","alxhpburyi","jalaycalmp","clojurermt"],"wordsToSearchFor":["clojure","elixir","ecmascript","rust","java","lua","lisp","ruby"]}', '{"clojure":{"start":{"column":1,"row":10},"end":{"column":7,"row":10}},"elixir":{"start":{"column":6,"row":5},"end":{"column":1,"row":5}},"ecmascript":{"start":{"column":10,"row":1},"end":{"column":10,"row":10}},"rust":{"start":{"column":9,"row":5},"end":{"column":9,"row":2}},"java":{"start":{"column":1,"row":1},"end":{"column":4,"row":4}},"lua":{"start":{"column":8,"row":9},"end":{"column":6,"row":7}},"lisp":{"start":{"column":3,"row":6},"end":{"column":6,"row":3}},"ruby":{"start":{"column":8,"row":6},"end":{"column":5,"row":9}}}'),
('695531db-69eb-463f-8bad-8de3bf5ef198', 'Should fail to locate a word that is not in the puzzle', '{"grid":["jefblpepre","camdcimgtc","oivokprjsm","pbwasqroua","rixilelhrs","wolcqlirpc","screeaumgr","alxhpburyi","jalaycalmp","clojurermt"],"wordsToSearchFor":["clojure","elixir","ecmascript","rust","java","lua","lisp","ruby","haskell"]}', '{"clojure":{"start":{"column":1,"row":10},"end":{"column":7,"row":10}},"elixir":{"start":{"column":6,"row":5},"end":{"column":1,"row":5}},"ecmascript":{"start":{"column":10,"row":1},"end":{"column":10,"row":10}},"rust":{"start":{"column":9,"row":5},"end":{"column":9,"row":2}},"java":{"start":{"column":1,"row":1},"end":{"column":4,"row":4}},"lua":{"start":{"column":8,"row":9},"end":{"column":6,"row":7}},"lisp":{"start":{"column":3,"row":6},"end":{"column":6,"row":3}},"ruby":{"start":{"column":8,"row":6},"end":{"column":5,"row":9}},"haskell":null}'),
('fda5b937-6774-4a52-8f89-f64ed833b175', 'Should fail to locate words that are not on horizontal, vertical, or diagonal lines', '{"grid":["abc","def"],"wordsToSearchFor":["aef","ced","abf","cbd"]}', '{"aef":null,"ced":null,"abf":null,"cbd":null}'),
('5b6198eb-2847-4e2f-8efe-65045df16bd3', 'Should not concatenate different lines to find a horizontal word', '{"grid":["abceli","xirdfg"],"wordsToSearchFor":["elixir"]}', '{"elixir":null}'),
('eba44139-a34f-4a92-98e1-bd5f259e5769', 'Should not wrap around horizontally to find a word', '{"grid":["silabcdefp"],"wordsToSearchFor":["lisp"]}', '{"lisp":null}'),
('cd1f0fa8-76af-4167-b105-935f78364dac', 'Should not wrap around vertically to find a word', '{"grid":["s","u","r","a","b","c","t"],"wordsToSearchFor":["rust"]}', '{"rust":null}');
